{"version":3,"sources":["loginScript.js"],"names":["document","addEventListener","loginButton","getElementById","username","value","password","fetch","method","headers","body","JSON","stringify","adminResponse","ok","json","adminUser","window","location","href","teacherResponse","teacherUser","studentResponse","studentUser","console","error","message"],"mappings":";;AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAY;AACtD,MAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAT,CAAwB,OAAxB,CAApB;AAEAD,EAAAA,WAAW,CAACD,gBAAZ,CAA6B,OAA7B,EAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BG,YAAAA,QAD4B,GACjBJ,QAAQ,CAACG,cAAT,CAAwB,eAAxB,EAAyCE,KADxB;AAE5BC,YAAAA,QAF4B,GAEjBN,QAAQ,CAACG,cAAT,CAAwB,eAAxB,EAAyCE,KAFxB;AAAA;AAAA;AAAA,4CAKFE,KAAK,CAAC,qBAAD,EAAwB;AACrDC,cAAAA,MAAM,EAAE,MAD6C;AAErDC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAF4C;AAKrDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,gBAAAA,QAAQ,EAARA,QAAF;AAAYE,gBAAAA,QAAQ,EAARA;AAAZ,eAAf;AAL+C,aAAxB,CALH;;AAAA;AAKxBO,YAAAA,aALwB;;AAAA,iBAa1BA,aAAa,CAACC,EAbY;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAcFD,aAAa,CAACE,IAAd,EAdE;;AAAA;AAcpBC,YAAAA,SAdoB;AAe1BC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,kBAAvB;AAf0B;;AAAA;AAAA;AAAA,4CAmBAZ,KAAK,CAAC,sCAAD,EAAyC;AACxEC,cAAAA,MAAM,EAAE,MADgE;AAExEC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAF+D;AAKxEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,gBAAAA,QAAQ,EAARA,QAAF;AAAYE,gBAAAA,QAAQ,EAARA;AAAZ,eAAf;AALkE,aAAzC,CAnBL;;AAAA;AAmBxBc,YAAAA,eAnBwB;;AAAA,iBA2B1BA,eAAe,CAACN,EA3BU;AAAA;AAAA;AAAA;;AAAA;AAAA,4CA4BAM,eAAe,CAACL,IAAhB,EA5BA;;AAAA;AA4BpBM,YAAAA,WA5BoB;AA6B1BJ,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,iBAAvB;AA7B0B;;AAAA;AAAA;AAAA,4CAiCAZ,KAAK,CAAC,sCAAD,EAAyC;AACxEC,cAAAA,MAAM,EAAE,MADgE;AAExEC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAF+D;AAKxEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,gBAAAA,QAAQ,EAARA,QAAF;AAAYE,gBAAAA,QAAQ,EAARA;AAAZ,eAAf;AALkE,aAAzC,CAjCL;;AAAA;AAiCxBgB,YAAAA,eAjCwB;;AAAA,iBAyC1BA,eAAe,CAACR,EAzCU;AAAA;AAAA;AAAA;;AAAA;AAAA,4CA0CAQ,eAAe,CAACP,IAAhB,EA1CA;;AAAA;AA0CpBQ,YAAAA,WA1CoB;AA2C1BN,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,wBAAvB;AA3C0B;;AAAA;AA+C9B;AACAK,YAAAA,OAAO,CAACC,KAAR,CAAc,cAAd;AAhD8B;AAAA;;AAAA;AAAA;AAAA;AAkD9BD,YAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqC,YAAMC,OAA3C;;AAlD8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;AAqDH,CAxDD","sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n    const loginButton = document.getElementById('login');\r\n\r\n    loginButton.addEventListener('click', async () => {\r\n        const username = document.getElementById('usernameInput').value;\r\n        const password = document.getElementById('passwordInput').value;\r\n\r\n        try {\r\n            const adminResponse = await fetch('api/v1/admins/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (adminResponse.ok) {\r\n                const adminUser = await adminResponse.json();\r\n                window.location.href = '/Admin-Dashboard';\r\n                return; // Make sure to exit the function after redirection\r\n            }\r\n\r\n            const teacherResponse = await fetch('http://localhost:2020/teachers/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (teacherResponse.ok) {\r\n                const teacherUser = await teacherResponse.json();\r\n                window.location.href = 'Doctor_DashBord';\r\n                return;\r\n            }\r\n\r\n            const studentResponse = await fetch('http://localhost:2020/students/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (studentResponse.ok) {\r\n                const studentUser = await studentResponse.json();\r\n                window.location.href = 'Student-Dashboard-main';\r\n                return;\r\n            }\r\n\r\n            // Handle other cases or show an error message\r\n            console.error('Login failed');\r\n        } catch (error) {\r\n            console.error('Error during login:', error.message);\r\n        }\r\n    });\r\n});\r\n"],"file":"loginScript.dev.js"}