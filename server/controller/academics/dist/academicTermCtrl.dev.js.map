{"version":3,"sources":["academicTermCtrl.js"],"names":["AysncHandler","require","AcademicTerm","Admin","exports","createAcademicTerm","req","res","body","name","description","duration","findOne","academicTerm","Error","create","createdBy","userAuth","_id","academicTermCreated","findById","admin","academicTerms","push","save","status","json","message","data","getAcademicTerms","find","getAcademicTerm","params","id","updateAcademicTerms","createAcademicTermFound","findByIdAndUpdate","deleteAcademicTerm","findByIdAndDelete"],"mappings":"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","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst AcademicTerm = require(\"../../model/Academic/AcademicTerm\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc Create Academic Term Year\n//@route POST /api/v1/academic-terms\n//@acess  Private\nexports.createAcademicTerm = AysncHandler(async (req, res) => {\n  const { name, description, duration } = req.body;\n  //check if exists\n  const academicTerm = await AcademicTerm.findOne({ name });\n  if (academicTerm) {\n    throw new Error(\"Academic term already exists\");\n  }\n  //create\n  const academicTermCreated = await AcademicTerm.create({\n    name,\n    description,\n    duration,\n    createdBy: req.userAuth._id,\n  });\n  //push academic into admin\n  const admin = await Admin.findById(req.userAuth._id);\n  admin.academicTerms.push(academicTermCreated._id);\n  await admin.save();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic term created successfully\",\n    data: academicTermCreated,\n  });\n});\n\n//@desc  get all Academic terms\n//@route GET /api/v1/academic-terms\n//@acess  Private\nexports.getAcademicTerms = AysncHandler(async (req, res) => {\n  const academicTerms = await AcademicTerm.find();\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic terms fetched successfully\",\n    data: academicTerms,\n  });\n});\n\n//@desc  get single Academic term\n//@route GET /api/v1/academic-terms/:id\n//@acess  Private\nexports.getAcademicTerm = AysncHandler(async (req, res) => {\n  const academicTerms = await AcademicTerm.findById(req.params.id);\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic terms fetched successfully\",\n    data: academicTerms,\n  });\n});\n\n//@desc   Update  Academic term\n//@route  PUT /api/v1/academic-terms/:id\n//@acess  Private\nexports.updateAcademicTerms = AysncHandler(async (req, res) => {\n  const { name, description, duration } = req.body;\n  //check name exists\n  const createAcademicTermFound = await AcademicTerm.findOne({ name });\n  if (createAcademicTermFound) {\n    throw new Error(\"Academic terms= already exists\");\n  }\n  const academicTerms = await AcademicTerm.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      description,\n      duration,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic term updated successfully\",\n    data: academicTerms,\n  });\n});\n\n//@desc   Delete  Academic term\n//@route  PUT /api/v1/academic-terms/:id\n//@acess  Private\nexports.deleteAcademicTerm = AysncHandler(async (req, res) => {\n  await AcademicTerm.findByIdAndDelete(req.params.id);\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic term deleted successfully\",\n  });\n});\n"],"file":"academicTermCtrl.dev.js"}