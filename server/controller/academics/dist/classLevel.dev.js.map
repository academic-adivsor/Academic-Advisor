{"version":3,"sources":["classLevel.js"],"names":["AysncHandler","require","ClassLevel","Admin","exports","createClassLevel","req","res","body","name","description","duration","findOne","classFound","Error","create","createdBy","userAuth","_id","classCreated","findById","admin","classLevels","push","save","status","json","message","data","getClassLevels","find","classes","getClassLevel","params","id","classLevel","updateclassLevel","findByIdAndUpdate","deleteClassLevel","findByIdAndDelete"],"mappings":";;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,iCAAD,CAA1B;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,yBAAD,CAArB,C,CAEA;AACA;AACA;;;AACAG,OAAO,CAACC,gBAAR,GAA2BL,YAAY,CAAC,iBAAOM,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACED,GAAG,CAACE,IADN,EAC9BC,IAD8B,aAC9BA,IAD8B,EACxBC,WADwB,aACxBA,WADwB,EACXC,QADW,aACXA,QADW,EAEtC;;AAFsC;AAAA,0CAGbT,UAAU,CAACU,OAAX,CAAmB;AAAEH,YAAAA,IAAI,EAAJA;AAAF,WAAnB,CAHa;;AAAA;AAGhCI,UAAAA,UAHgC;;AAAA,eAIlCA,UAJkC;AAAA;AAAA;AAAA;;AAAA,gBAK9B,IAAIC,KAAJ,CAAU,uBAAV,CAL8B;;AAAA;AAAA;AAAA,0CAQXZ,UAAU,CAACa,MAAX,CAAkB;AAC3CN,YAAAA,IAAI,EAAJA,IAD2C;AAE3CC,YAAAA,WAAW,EAAXA,WAF2C;AAG3CM,YAAAA,SAAS,EAAEV,GAAG,CAACW,QAAJ,CAAaC;AAHmB,WAAlB,CARW;;AAAA;AAQhCC,UAAAA,YARgC;AAAA;AAAA,0CAclBhB,KAAK,CAACiB,QAAN,CAAed,GAAG,CAACW,QAAJ,CAAaC,GAA5B,CAdkB;;AAAA;AAchCG,UAAAA,KAdgC;AAetCA,UAAAA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuBJ,YAAY,CAACD,GAApC,EAfsC,CAgBtC;;AAhBsC;AAAA,0CAiBhCG,KAAK,CAACG,IAAN,EAjBgC;;AAAA;AAmBtCjB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAAA,MAAM,EAAE,SADW;AAEnBE,YAAAA,OAAO,EAAE,4BAFU;AAGnBC,YAAAA,IAAI,EAAET;AAHa,WAArB;;AAnBsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAAvC,C,CA0BA;AACA;AACA;;AACAf,OAAO,CAACyB,cAAR,GAAyB7B,YAAY,CAAC,kBAAOM,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACdL,UAAU,CAAC4B,IAAX,EADc;;AAAA;AAC9BC,UAAAA,OAD8B;AAEpCxB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAAA,MAAM,EAAE,SADW;AAEnBE,YAAAA,OAAO,EAAE,mCAFU;AAGnBC,YAAAA,IAAI,EAAEG;AAHa,WAArB;;AAFoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAArC,C,CASA;AACA;AACA;;AACA3B,OAAO,CAAC4B,aAAR,GAAwBhC,YAAY,CAAC,kBAAOM,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACVL,UAAU,CAACkB,QAAX,CAAoBd,GAAG,CAAC2B,MAAJ,CAAWC,EAA/B,CADU;;AAAA;AAC7BC,UAAAA,UAD6B;AAEnC5B,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAAA,MAAM,EAAE,SADW;AAEnBE,YAAAA,OAAO,EAAE,4BAFU;AAGnBC,YAAAA,IAAI,EAAEO;AAHa,WAArB;;AAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAApC,C,CASA;AACA;AACA;;AAEA/B,OAAO,CAACgC,gBAAR,GAA2BpC,YAAY,CAAC,kBAAOM,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACRD,GAAG,CAACE,IADI,EAC9BC,IAD8B,cAC9BA,IAD8B,EACxBC,WADwB,cACxBA,WADwB,EAEtC;;AAFsC;AAAA,0CAGbR,UAAU,CAACU,OAAX,CAAmB;AAAEH,YAAAA,IAAI,EAAJA;AAAF,WAAnB,CAHa;;AAAA;AAGhCI,UAAAA,UAHgC;;AAAA,eAIlCA,UAJkC;AAAA;AAAA;AAAA;;AAAA,gBAK9B,IAAIC,KAAJ,CAAU,sBAAV,CAL8B;;AAAA;AAAA;AAAA,0CAObZ,UAAU,CAACmC,iBAAX,CACvB/B,GAAG,CAAC2B,MAAJ,CAAWC,EADY,EAEvB;AACEzB,YAAAA,IAAI,EAAJA,IADF;AAEEC,YAAAA,WAAW,EAAXA,WAFF;AAGEM,YAAAA,SAAS,EAAEV,GAAG,CAACW,QAAJ,CAAaC;AAH1B,WAFuB,EAOvB;AACE,mBAAK;AADP,WAPuB,CAPa;;AAAA;AAOhCiB,UAAAA,UAPgC;AAmBtC5B,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAAA,MAAM,EAAE,SADW;AAEnBE,YAAAA,OAAO,EAAE,6BAFU;AAGnBC,YAAAA,IAAI,EAAEO;AAHa,WAArB;;AAnBsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAAvC,C,CA0BA;AACA;AACA;;AACA/B,OAAO,CAACkC,gBAAR,GAA2BtC,YAAY,CAAC,kBAAOM,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAChCL,UAAU,CAACqC,iBAAX,CAA6BjC,GAAG,CAAC2B,MAAJ,CAAWC,EAAxC,CADgC;;AAAA;AAEtC3B,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAAA,MAAM,EAAE,SADW;AAEnBE,YAAAA,OAAO,EAAE;AAFU,WAArB;;AAFsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAAvC","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst ClassLevel = require(\"../../model/Academic/ClassLevel\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc  Create Class Level\n//@route POST /api/v1/class-levels\n//@acess  Private\nexports.createClassLevel = AysncHandler(async (req, res) => {\n  const { name, description, duration } = req.body;\n  //check if exists\n  const classFound = await ClassLevel.findOne({ name });\n  if (classFound) {\n    throw new Error(\"Class  already exists\");\n  }\n  //create\n  const classCreated = await ClassLevel.create({\n    name,\n    description,\n    createdBy: req.userAuth._id,\n  });\n  //push class into admin\n  const admin = await Admin.findById(req.userAuth._id);\n  admin.classLevels.push(classCreated._id);\n  //save\n  await admin.save();\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class created successfully\",\n    data: classCreated,\n  });\n});\n\n//@desc  get all class levels\n//@route GET /api/v1/class-levels\n//@acess  Private\nexports.getClassLevels = AysncHandler(async (req, res) => {\n  const classes = await ClassLevel.find();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class Levels fetched successfully\",\n    data: classes,\n  });\n});\n\n//@desc  get single Class level\n//@route GET /api/v1/class-levels/:id\n//@acess  Private\nexports.getClassLevel = AysncHandler(async (req, res) => {\n  const classLevel = await ClassLevel.findById(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class fetched successfully\",\n    data: classLevel,\n  });\n});\n\n//@desc   Update  Class Level\n//@route  PUT /api/v1/class-levels/:id\n//@acess  Private\n\nexports.updateclassLevel = AysncHandler(async (req, res) => {\n  const { name, description } = req.body;\n  //check name exists\n  const classFound = await ClassLevel.findOne({ name });\n  if (classFound) {\n    throw new Error(\"Class already exists\");\n  }\n  const classLevel = await ClassLevel.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      description,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class  updated successfully\",\n    data: classLevel,\n  });\n});\n\n//@desc   Delete  class level\n//@route  PUT /api/v1/aclass-levels/:id\n//@acess  Private\nexports.deleteClassLevel = AysncHandler(async (req, res) => {\n  await ClassLevel.findByIdAndDelete(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class level deleted successfully\",\n  });\n});\n"],"file":"classLevel.dev.js"}