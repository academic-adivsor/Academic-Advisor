{"version":3,"sources":["classLevel.js"],"names":["AysncHandler","require","ClassLevel","exports","createClassLevel","req","res","_req$body","name","description","classCreated","admin","regeneratorRuntime","async","_context","prev","next","body","duration","awrap","findOne","sent","Error","create","createdBy","userAuth","Admin","findById","save","classFound","status","message","data","stop","getClassLevels","classes","_context2","find","getClassLevel","classLevel","_context3","params","id","classLevels","updateclassLevel","_req$body2","_context4","findByIdAndUpdate","_id","new","json","deleteClassLevel","_context5","findByIdAndDelete"],"mappings":"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","file":"classLevel.min.js","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst ClassLevel = require(\"../../model/Academic/ClassLevel\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc  Create Class Level\n//@route POST /api/v1/class-levels\n//@acess  Private\nexports.createClassLevel = AysncHandler(async (req, res) => {\n  const { name, description, duration } = req.body;\n  //check if exists\n  const classFound = await ClassLevel.findOne({ name });\n  if (classFound) {\n    throw new Error(\"Class  already exists\");\n  }\n  //create\n  const classCreated = await ClassLevel.create({\n    name,\n    description,\n    createdBy: req.userAuth._id,\n  });\n  //push class into admin\n  const admin = await Admin.findById(req.userAuth._id);\n  admin.classLevels.push(classCreated._id);\n  //save\n  await admin.save();\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class created successfully\",\n    data: classCreated,\n  });\n});\n\n//@desc  get all class levels\n//@route GET /api/v1/class-levels\n//@acess  Private\nexports.getClassLevels = AysncHandler(async (req, res) => {\n  const classes = await ClassLevel.find();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class Levels fetched successfully\",\n    data: classes,\n  });\n});\n\n//@desc  get single Class level\n//@route GET /api/v1/class-levels/:id\n//@acess  Private\nexports.getClassLevel = AysncHandler(async (req, res) => {\n  const classLevel = await ClassLevel.findById(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class fetched successfully\",\n    data: classLevel,\n  });\n});\n\n//@desc   Update  Class Level\n//@route  PUT /api/v1/class-levels/:id\n//@acess  Private\n\nexports.updateclassLevel = AysncHandler(async (req, res) => {\n  const { name, description } = req.body;\n  //check name exists\n  const classFound = await ClassLevel.findOne({ name });\n  if (classFound) {\n    throw new Error(\"Class already exists\");\n  }\n  const classLevel = await ClassLevel.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      description,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class  updated successfully\",\n    data: classLevel,\n  });\n});\n\n//@desc   Delete  class level\n//@route  PUT /api/v1/aclass-levels/:id\n//@acess  Private\nexports.deleteClassLevel = AysncHandler(async (req, res) => {\n  await ClassLevel.findByIdAndDelete(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Class level deleted successfully\",\n  });\n});\n"]}