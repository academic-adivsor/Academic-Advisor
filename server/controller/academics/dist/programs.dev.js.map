{"version":3,"sources":["programs.js"],"names":["AysncHandler","require","ClassLevel","Program","Admin","exports","createProgram","req","res","body","name","description","findOne","programFound","Error","create","createdBy","userAuth","_id","programCreated","findById","admin","programs","push","save","status","json","message","data","getPrograms","find","classes","getProgram","params","id","program","updatProgram","findByIdAndUpdate","deleteProgram","findByIdAndDelete"],"mappings":"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","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst ClassLevel = require(\"../../model/Academic/ClassLevel\");\nconst Program = require(\"../../model/Academic/Program\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc  Create Program\n//@route POST /api/v1/programs\n//@acess  Private\n\nexports.createProgram = AysncHandler(async (req, res) => {\n  const { name, description } = req.body;\n  //check if exists\n  const programFound = await Program.findOne({ name });\n  if (programFound) {\n    throw new Error(\"Program  already exists\");\n  }\n  //create\n  const programCreated = await Program.create({\n    name,\n    description,\n    createdBy: req.userAuth._id,\n  });\n  //push program into admin\n  const admin = await Admin.findById(req.userAuth._id);\n  admin.programs.push(programCreated._id);\n  //save\n  await admin.save();\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program created successfully\",\n    data: programCreated,\n  });\n});\n\n//@desc  get all Programs\n//@route GET /api/v1/programs\n//@acess  Private\n\nexports.getPrograms = AysncHandler(async (req, res) => {\n  const classes = await Program.find();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Programs fetched successfully\",\n    data: classes,\n  });\n});\n\n//@desc  get single Program\n//@route GET /api/v1/programs/:id\n//@acess  Private\nexports.getProgram = AysncHandler(async (req, res) => {\n  const program = await Program.findById(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program fetched successfully\",\n    data: program,\n  });\n});\n\n//@desc   Update  Program\n//@route  PUT /api/v1/programs/:id\n//@acess  Private\n\nexports.updatProgram = AysncHandler(async (req, res) => {\n  const { name, description } = req.body;\n  //check name exists\n  const programFound = await ClassLevel.findOne({ name });\n  if (programFound) {\n    throw new Error(\"Program already exists\");\n  }\n  const program = await Program.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      description,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program  updated successfully\",\n    data: program,\n  });\n});\n\n//@desc   Delete  Program\n//@route  PUT /api/v1/programs/:id\n//@acess  Private\nexports.deleteProgram = AysncHandler(async (req, res) => {\n  await Program.findByIdAndDelete(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program deleted successfully\",\n  });\n});\n"],"file":"programs.dev.js"}