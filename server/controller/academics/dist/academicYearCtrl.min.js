"use strict";var AysncHandler=require("express-async-handler"),AcademicYear=require("../../model/Academic/AcademicYear"),Admin=require("../../model/staff/Admin");exports.createAcademicYear=AysncHandler(function(a,r){var t,s,n,c,u,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=a.body,s=t.name,n=t.fromYear,c=t.toYear,e.next=3,regeneratorRuntime.awrap(AcademicYear.findOne({name:s}));case 3:if(e.sent)throw new Error("Academic year already exists");e.next=6;break;case 6:return e.next=8,regeneratorRuntime.awrap(AcademicYear.create({name:s,fromYear:n,toYear:c,createdBy:a.userAuth._id}));case 8:return u=e.sent,e.next=11,regeneratorRuntime.awrap(Admin.findById(a.userAuth._id));case 11:return(d=e.sent).academicYears.push(u._id),e.next=15,regeneratorRuntime.awrap(d.save());case 15:r.status(201).json({status:"success",message:"Academic year created successfully",data:u});case 16:case"end":return e.stop()}})}),exports.getAcademicYears=AysncHandler(function(e,a){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(AcademicYear.find());case 2:r=e.sent,a.status(201).json({status:"success",message:"Academic years fetched successfully",data:r});case 4:case"end":return e.stop()}})}),exports.getAcademicYear=AysncHandler(function(a,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(AcademicYear.findById(a.params.id));case 2:t=e.sent,r.status(201).json({status:"success",message:"Academic years fetched successfully",data:t});case 4:case"end":return e.stop()}})}),exports.updateAcademicYear=AysncHandler(function(a,r){var t,s,n,c,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=a.body,s=t.name,n=t.fromYear,c=t.toYear,e.next=3,regeneratorRuntime.awrap(AcademicYear.findOne({name:s}));case 3:if(e.sent)throw new Error("Academic year already exists");e.next=6;break;case 6:return e.next=8,regeneratorRuntime.awrap(AcademicYear.findByIdAndUpdate(a.params.id,{name:s,fromYear:n,toYear:c,createdBy:a.userAuth._id},{new:!0}));case 8:u=e.sent,r.status(201).json({status:"success",message:"Academic years updated successfully",data:u});case 10:case"end":return e.stop()}})}),exports.deleteAcademicYear=AysncHandler(function(a,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(AcademicYear.findByIdAndDelete(a.params.id));case 2:r.status(201).json({status:"success",message:"Academic year deleted successfully"});case 3:case"end":return e.stop()}})});
//# sourceMappingURL=academicYearCtrl.min.js.map
