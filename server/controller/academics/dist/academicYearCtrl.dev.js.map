{"version":3,"sources":["academicYearCtrl.js"],"names":["AysncHandler","require","AcademicYear","Admin","exports","createAcademicYear","req","res","body","name","fromYear","toYear","findOne","academicYear","Error","create","createdBy","userAuth","_id","academicYearCreated","findById","admin","academicYears","push","save","status","json","message","data","getAcademicYears","find","getAcademicYear","params","id","updateAcademicYear","createAcademicYearFound","findByIdAndUpdate","deleteAcademicYear","findByIdAndDelete"],"mappings":"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","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst AcademicYear = require(\"../../model/Academic/AcademicYear\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc Create Academic Year\n//@route POST /api/v1/academic-years\n//@acess  Private\nexports.createAcademicYear = AysncHandler(async (req, res) => {\n  const { name, fromYear, toYear } = req.body;\n  //check if exists\n  const academicYear = await AcademicYear.findOne({ name });\n  if (academicYear) {\n    throw new Error(\"Academic year already exists\");\n  }\n  //create\n  const academicYearCreated = await AcademicYear.create({\n    name,\n    fromYear,\n    toYear,\n    createdBy: req.userAuth._id,\n  });\n  //push academic into admin\n  const admin = await Admin.findById(req.userAuth._id);\n  admin.academicYears.push(academicYearCreated._id);\n  await admin.save();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic year created successfully\",\n    data: academicYearCreated,\n  });\n});\n\n//@desc  get all Academic Years\n//@route GET /api/v1/academic-years\n//@acess  Private\nexports.getAcademicYears = AysncHandler(async (req, res) => {\n  const academicYears = await AcademicYear.find();\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic years fetched successfully\",\n    data: academicYears,\n  });\n});\n\n//@desc  get single Academic Year\n//@route GET /api/v1/academic-years/:id\n//@acess  Private\nexports.getAcademicYear = AysncHandler(async (req, res) => {\n  const academicYears = await AcademicYear.findById(req.params.id);\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic years fetched successfully\",\n    data: academicYears,\n  });\n});\n\n//@desc   Update  Academic Year\n//@route  PUT /api/v1/academic-years/:id\n//@acess  Private\nexports.updateAcademicYear = AysncHandler(async (req, res) => {\n  const { name, fromYear, toYear } = req.body;\n  //check name exists\n  const createAcademicYearFound = await AcademicYear.findOne({ name });\n  if (createAcademicYearFound) {\n    throw new Error(\"Academic year already exists\");\n  }\n  const academicYear = await AcademicYear.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      fromYear,\n      toYear,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic years updated successfully\",\n    data: academicYear,\n  });\n});\n\n//@desc   Update  Academic Year\n//@route  PUT /api/v1/academic-years/:id\n//@acess  Private\nexports.deleteAcademicYear = AysncHandler(async (req, res) => {\n  await AcademicYear.findByIdAndDelete(req.params.id);\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic year deleted successfully\",\n  });\n});\n"],"file":"academicYearCtrl.dev.js"}