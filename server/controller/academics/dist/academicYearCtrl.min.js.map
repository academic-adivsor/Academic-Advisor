{"version":3,"sources":["academicYearCtrl.js"],"names":["AysncHandler","require","AcademicYear","exports","createAcademicYear","req","res","_req$body","name","fromYear","toYear","academicYearCreated","admin","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","Error","create","createdBy","userAuth","_id","academicYears","push","save","status","json","academicYear","message","data","stop","getAcademicYears","_context2","find","getAcademicYear","_context3","findById","params","id","updateAcademicYear","_req$body2","_context4","findByIdAndUpdate","new","deleteAcademicYear","_context5","findByIdAndDelete"],"mappings":"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","file":"academicYearCtrl.min.js","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst AcademicYear = require(\"../../model/Academic/AcademicYear\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc Create Academic Year\n//@route POST /api/v1/academic-years\n//@acess  Private\nexports.createAcademicYear = AysncHandler(async (req, res) => {\n  const { name, fromYear, toYear } = req.body;\n  //check if exists\n  const academicYear = await AcademicYear.findOne({ name });\n  if (academicYear) {\n    throw new Error(\"Academic year already exists\");\n  }\n  //create\n  const academicYearCreated = await AcademicYear.create({\n    name,\n    fromYear,\n    toYear,\n    createdBy: req.userAuth._id,\n  });\n  //push academic into admin\n  const admin = await Admin.findById(req.userAuth._id);\n  admin.academicYears.push(academicYearCreated._id);\n  await admin.save();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic year created successfully\",\n    data: academicYearCreated,\n  });\n});\n\n//@desc  get all Academic Years\n//@route GET /api/v1/academic-years\n//@acess  Private\nexports.getAcademicYears = AysncHandler(async (req, res) => {\n  const academicYears = await AcademicYear.find();\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic years fetched successfully\",\n    data: academicYears,\n  });\n});\n\n//@desc  get single Academic Year\n//@route GET /api/v1/academic-years/:id\n//@acess  Private\nexports.getAcademicYear = AysncHandler(async (req, res) => {\n  const academicYears = await AcademicYear.findById(req.params.id);\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic years fetched successfully\",\n    data: academicYears,\n  });\n});\n\n//@desc   Update  Academic Year\n//@route  PUT /api/v1/academic-years/:id\n//@acess  Private\nexports.updateAcademicYear = AysncHandler(async (req, res) => {\n  const { name, fromYear, toYear } = req.body;\n  //check name exists\n  const createAcademicYearFound = await AcademicYear.findOne({ name });\n  if (createAcademicYearFound) {\n    throw new Error(\"Academic year already exists\");\n  }\n  const academicYear = await AcademicYear.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      fromYear,\n      toYear,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic years updated successfully\",\n    data: academicYear,\n  });\n});\n\n//@desc   Update  Academic Year\n//@route  PUT /api/v1/academic-years/:id\n//@acess  Private\nexports.deleteAcademicYear = AysncHandler(async (req, res) => {\n  await AcademicYear.findByIdAndDelete(req.params.id);\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Academic year deleted successfully\",\n  });\n});\n"]}