{"version":3,"sources":["programs.js"],"names":["AysncHandler","require","ClassLevel","Admin","exports","createProgram","req","res","_req$body","name","description","programCreated","admin","regeneratorRuntime","async","_context","prev","next","body","awrap","Program","findOne","sent","Error","create","createdBy","userAuth","findById","push","save","programFound","status","message","data","stop","getPrograms","classes","_context2","find","program","_context3","_id","id","json","updatProgram","_req$body2","_context4","findByIdAndUpdate","params","new","deleteProgram","_context5","findByIdAndDelete"],"mappings":"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","file":"programs.min.js","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst ClassLevel = require(\"../../model/Academic/ClassLevel\");\nconst Program = require(\"../../model/Academic/Program\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc  Create Program\n//@route POST /api/v1/programs\n//@acess  Private\n\nexports.createProgram = AysncHandler(async (req, res) => {\n  const { name, description } = req.body;\n  //check if exists\n  const programFound = await Program.findOne({ name });\n  if (programFound) {\n    throw new Error(\"Program  already exists\");\n  }\n  //create\n  const programCreated = await Program.create({\n    name,\n    description,\n    createdBy: req.userAuth._id,\n  });\n  //push program into admin\n  const admin = await Admin.findById(req.userAuth._id);\n  admin.programs.push(programCreated._id);\n  //save\n  await admin.save();\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program created successfully\",\n    data: programCreated,\n  });\n});\n\n//@desc  get all Programs\n//@route GET /api/v1/programs\n//@acess  Private\n\nexports.getPrograms = AysncHandler(async (req, res) => {\n  const classes = await Program.find();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Programs fetched successfully\",\n    data: classes,\n  });\n});\n\n//@desc  get single Program\n//@route GET /api/v1/programs/:id\n//@acess  Private\nexports.getProgram = AysncHandler(async (req, res) => {\n  const program = await Program.findById(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program fetched successfully\",\n    data: program,\n  });\n});\n\n//@desc   Update  Program\n//@route  PUT /api/v1/programs/:id\n//@acess  Private\n\nexports.updatProgram = AysncHandler(async (req, res) => {\n  const { name, description } = req.body;\n  //check name exists\n  const programFound = await ClassLevel.findOne({ name });\n  if (programFound) {\n    throw new Error(\"Program already exists\");\n  }\n  const program = await Program.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      description,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program  updated successfully\",\n    data: program,\n  });\n});\n\n//@desc   Delete  Program\n//@route  PUT /api/v1/programs/:id\n//@acess  Private\nexports.deleteProgram = AysncHandler(async (req, res) => {\n  await Program.findByIdAndDelete(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program deleted successfully\",\n  });\n});\n"]}