{"version":3,"sources":["subjects.js"],"names":["AysncHandler","require","Program","Admin","exports","createSubject","req","res","_req$body","name","description","academicTerm","programFound","subjectCreated","regeneratorRuntime","async","_context","prev","next","body","awrap","findById","params","programID","sent","Error","Subject","findOne","create","_id","subjects","push","save","status","json","message","data","stop","getSubjects","classes","_context2","subjectFound","find","id","createdBy","program","updatSubject","_req$body2","subject","_context4","findByIdAndUpdate","userAuth","new","_context5","findByIdAndDelete"],"mappings":"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","file":"subjects.min.js","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst Program = require(\"../../model/Academic/Program\");\nconst Subject = require(\"../../model/Academic/Subject\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc  Create subject\n//@route POST /api/v1/subjects/:programID\n//@acess  Private\n\nexports.createSubject = AysncHandler(async (req, res) => {\n  const { name, description, academicTerm } = req.body;\n  //find the program\n  const programFound = await Program.findById(req.params.programID);\n  if (!programFound) {\n    throw new Error(\"Program  not found\");\n  }\n  //check if exists\n  const subjectFound = await Subject.findOne({ name });\n  if (subjectFound) {\n    throw new Error(\"Subject  already exists\");\n  }\n  //create\n  const subjectCreated = await Subject.create({\n    name,\n    description,\n    academicTerm,\n    createdBy: req.userAuth._id,\n  });\n  //push to the program\nprogramFound.subjects.push(subjectCreated._id);\n  //save\n  await programFound.save();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program created successfully\",\n    data: subjectCreated,\n  });\n});\n\n//@desc  get all Subjects\n//@route GET /api/v1/subjects\n//@acess  Private\n\nexports.getSubjects = AysncHandler(async (req, res) => {\n  const classes = await Subject.find();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Subjects fetched successfully\",\n    data: classes,\n  });\n});\n\n//@desc  get single subject\n//@route GET /api/v1/subjects/:id\n//@acess  Private\nexports.getProgram = AysncHandler(async (req, res) => {\n  const program = await Subject.findById(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Subject fetched successfully\",\n    data: program,\n  });\n});\n\n//@desc   Update  Subject\n//@route  PUT /api/v1/subjects/:id\n//@acess  Private\n\nexports.updatSubject = AysncHandler(async (req, res) => {\n  const { name, description, academicTerm } = req.body;\n  //check name exists\n  const subjectFound = await Subject.findOne({ name });\n  if (subjectFound) {\n    throw new Error(\"Program already exists\");\n  }\n  const subject = await Subject.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      description,\n      academicTerm,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"subject  updated successfully\",\n    data: subject,\n  });\n});\n\n//@desc   Delete  Subject\n//@route  PUT /api/v1/subjects/:id\n//@acess  Private\nexports.deleteSubject = AysncHandler(async (req, res) => {\n  await Subject.findByIdAndDelete(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"subject deleted successfully\",\n  });\n});\n"]}