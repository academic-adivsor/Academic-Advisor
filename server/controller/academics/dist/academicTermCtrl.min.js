"use strict";var AysncHandler=require("express-async-handler"),AcademicTerm=require("../../model/Academic/AcademicTerm"),Admin=require("../../model/staff/Admin");exports.createAcademicTerm=AysncHandler(function(r,t){var a,s,n,c,i,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=r.body,s=a.name,n=a.description,c=a.duration,e.next=3,regeneratorRuntime.awrap(AcademicTerm.findOne({name:s}));case 3:if(e.sent)throw new Error("Academic term already exists");e.next=6;break;case 6:return e.next=8,regeneratorRuntime.awrap(AcademicTerm.create({name:s,description:n,duration:c,createdBy:r.userAuth._id}));case 8:return i=e.sent,e.next=11,regeneratorRuntime.awrap(Admin.findById(r.userAuth._id));case 11:return(d=e.sent).academicTerms.push(i._id),e.next=15,regeneratorRuntime.awrap(d.save());case 15:t.status(201).json({status:"success",message:"Academic term created successfully",data:i});case 16:case"end":return e.stop()}})}),exports.getAcademicTerms=AysncHandler(function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(AcademicTerm.find());case 2:t=e.sent,r.status(201).json({status:"success",message:"Academic terms fetched successfully",data:t});case 4:case"end":return e.stop()}})}),exports.getAcademicTerm=AysncHandler(function(r,t){var a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(AcademicTerm.findById(r.params.id));case 2:a=e.sent,t.status(201).json({status:"success",message:"Academic terms fetched successfully",data:a});case 4:case"end":return e.stop()}})}),exports.updateAcademicTerms=AysncHandler(function(r,t){var a,s,n,c,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=r.body,s=a.name,n=a.description,c=a.duration,e.next=3,regeneratorRuntime.awrap(AcademicTerm.findOne({name:s}));case 3:if(e.sent)throw new Error("Academic terms= already exists");e.next=6;break;case 6:return e.next=8,regeneratorRuntime.awrap(AcademicTerm.findByIdAndUpdate(r.params.id,{name:s,description:n,duration:c,createdBy:r.userAuth._id},{new:!0}));case 8:i=e.sent,t.status(201).json({status:"success",message:"Academic term updated successfully",data:i});case 10:case"end":return e.stop()}})}),exports.deleteAcademicTerm=AysncHandler(function(r,t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(AcademicTerm.findByIdAndDelete(r.params.id));case 2:t.status(201).json({status:"success",message:"Academic term deleted successfully"});case 3:case"end":return e.stop()}})});
//# sourceMappingURL=academicTermCtrl.min.js.map
