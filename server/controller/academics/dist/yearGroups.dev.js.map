{"version":3,"sources":["yearGroups.js"],"names":["AysncHandler","require","Program","Subject","YearGroup","Admin","exports","createYearGroup","req","res","body","name","academicYear","findOne","yeargroup","Error","create","createdBy","userAuth","_id","yearGroup","findById","admin","yearGroups","push","save","status","json","message","data","getYearGroups","find","groups","getYearGroup","params","id","group","updateYearGroup","yearGroupFound","findByIdAndUpdate","deleteYearGroup","findByIdAndDelete"],"mappings":"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","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst Program = require(\"../../model/Academic/Program\");\nconst Subject = require(\"../../model/Academic/Subject\");\nconst YearGroup = require(\"../../model/Academic/YearGroup\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc  Create year group\n//@route POST /api/v1/year-groups\n//@acess  Private\n\nexports.createYearGroup = AysncHandler(async (req, res) => {\n  const { name, academicYear } = req.body;\n\n  //check if exists\n  const yeargroup = await YearGroup.findOne({ name });\n  if (yeargroup) {\n    throw new Error(\"Year Group/Graduation   already exists\");\n  }\n  //create\n  const yearGroup = await YearGroup.create({\n    name,\n    academicYear,\n    createdBy: req.userAuth._id,\n  });\n  //push to the program\n  //find the admin\n  const admin = await Admin.findById(req.userAuth._id);\n  if (!admin) {\n    throw new Error(\"Admin not found\");\n  }\n  //push year froup into admin\n  admin.yearGroups.push(yearGroup._id);\n  //save\n  await admin.save();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Year Group created successfully\",\n    data: yearGroup,\n  });\n});\n\n//@desc  get all Year grups\n//@route GET /api/v1/year-groups\n//@acess  Private\n\nexports.getYearGroups = AysncHandler(async (req, res) => {\n  const groups = await YearGroup.find();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Year Groups fetched successfully\",\n    data: groups,\n  });\n});\n\n//@desc  get single year group\n//@route GET /api/v1/year-group/:id\n//@acess  Private\n\nexports.getYearGroup = AysncHandler(async (req, res) => {\n  const group = await YearGroup.findById(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Year Group fetched successfully\",\n    data: group,\n  });\n});\n\n//@desc   Update  Year Group\n//@route  PUT /api/v1/year-groups/:id\n//@acess  Private\n\nexports.updateYearGroup = AysncHandler(async (req, res) => {\n  const { name, academicYear } = req.body;\n  //check name exists\n  const yearGroupFound = await YearGroup.findOne({ name });\n  if (yearGroupFound) {\n    throw new Error(\"year Group already exists\");\n  }\n  const yearGroup = await YearGroup.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      academicYear,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"Year Group  updated successfully\",\n    data: yearGroup,\n  });\n});\n\n//@desc   Delete  Year group\n//@route  PUT /api/v1/year-groups/:id\n//@acess  Private\nexports.deleteYearGroup = AysncHandler(async (req, res) => {\n  await YearGroup.findByIdAndDelete(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Year Group deleted successfully\",\n  });\n});\n"],"file":"yearGroups.dev.js"}