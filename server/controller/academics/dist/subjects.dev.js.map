{"version":3,"sources":["subjects.js"],"names":["AysncHandler","require","Program","Subject","Admin","exports","createSubject","req","res","body","name","description","academicTerm","findById","params","programID","programFound","Error","findOne","subjectFound","create","createdBy","userAuth","_id","subjectCreated","save","status","json","message","data","getSubjects","find","classes","getProgram","id","program","updatSubject","findByIdAndUpdate","subject","deleteSubject","findByIdAndDelete"],"mappings":"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","sourcesContent":["const AysncHandler = require(\"express-async-handler\");\nconst Program = require(\"../../model/Academic/Program\");\nconst Subject = require(\"../../model/Academic/Subject\");\nconst Admin = require(\"../../model/staff/Admin\");\n\n//@desc  Create subject\n//@route POST /api/v1/subjects/:programID\n//@acess  Private\n\nexports.createSubject = AysncHandler(async (req, res) => {\n  const { name, description, academicTerm } = req.body;\n  //find the program\n  const programFound = await Program.findById(req.params.programID);\n  if (!programFound) {\n    throw new Error(\"Program  not found\");\n  }\n  //check if exists\n  const subjectFound = await Subject.findOne({ name });\n  if (subjectFound) {\n    throw new Error(\"Subject  already exists\");\n  }\n  //create\n  const subjectCreated = await Subject.create({\n    name,\n    description,\n    academicTerm,\n    createdBy: req.userAuth._id,\n  });\n  //push to the program\n  // programFound.subjects.push(subjectCreated._id);\n  //save\n  await programFound.save();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Program created successfully\",\n    data: subjectCreated,\n  });\n});\n\n//@desc  get all Subjects\n//@route GET /api/v1/subjects\n//@acess  Private\n\nexports.getSubjects = AysncHandler(async (req, res) => {\n  const classes = await Subject.find();\n  res.status(201).json({\n    status: \"success\",\n    message: \"Subjects fetched successfully\",\n    data: classes,\n  });\n});\n\n//@desc  get single subject\n//@route GET /api/v1/subjects/:id\n//@acess  Private\nexports.getProgram = AysncHandler(async (req, res) => {\n  const program = await Subject.findById(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"Subject fetched successfully\",\n    data: program,\n  });\n});\n\n//@desc   Update  Subject\n//@route  PUT /api/v1/subjects/:id\n//@acess  Private\n\nexports.updatSubject = AysncHandler(async (req, res) => {\n  const { name, description, academicTerm } = req.body;\n  //check name exists\n  const subjectFound = await Subject.findOne({ name });\n  if (subjectFound) {\n    throw new Error(\"Program already exists\");\n  }\n  const subject = await Subject.findByIdAndUpdate(\n    req.params.id,\n    {\n      name,\n      description,\n      academicTerm,\n      createdBy: req.userAuth._id,\n    },\n    {\n      new: true,\n    }\n  );\n\n  res.status(201).json({\n    status: \"success\",\n    message: \"subject  updated successfully\",\n    data: subject,\n  });\n});\n\n//@desc   Delete  Subject\n//@route  PUT /api/v1/subjects/:id\n//@acess  Private\nexports.deleteSubject = AysncHandler(async (req, res) => {\n  await Subject.findByIdAndDelete(req.params.id);\n  res.status(201).json({\n    status: \"success\",\n    message: \"subject deleted successfully\",\n  });\n});\n"],"file":"subjects.dev.js"}