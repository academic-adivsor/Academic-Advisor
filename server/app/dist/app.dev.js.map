{"version":3,"sources":["app.js"],"names":["express","require","morgan","cors","app","globalErrHandler","notFoundErr","academicTermRouter","academicYearRouter","classLevelRouter","programRouter","subjectRouter","yearGroupRouter","adminRouter","use","json","module","exports","whitelist","corsOptions","origin","callback","indexOf","Error","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,GAAG,GAAGJ,OAAO,EAAnB;;eAC2CC,OAAO,CAAC,iCAAD,C;IAA1CI,gB,YAAAA,gB;IAAkBC,W,YAAAA,W;;AAC1B,IAAMC,kBAAkB,GAAGN,OAAO,CAAC,kCAAD,CAAlC;;AACA,IAAMO,kBAAkB,GAAGP,OAAO,CAAC,kCAAD,CAAlC;;AACA,IAAMQ,gBAAgB,GAACR,OAAO,CAAC,gCAAD,CAA9B;;AACA,IAAMS,aAAa,GAACT,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAMU,aAAa,GAACV,OAAO,CAAC,8BAAD,CAA3B;;AACA,IAAMW,eAAe,GAACX,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAMY,WAAW,GAAGZ,OAAO,CAAC,6BAAD,CAA3B;;AACAG,GAAG,CAACU,GAAJ,CAAQd,OAAO,CAACe,IAAR,EAAR,E,CACA;AACA;;AACAX,GAAG,CAACU,GAAJ,CAAQ,gBAAR,EAA0BD,WAA1B;AACAT,GAAG,CAACU,GAAJ,CAAQ,wBAAR,EAAkCN,kBAAlC;AACAJ,GAAG,CAACU,GAAJ,CAAQ,wBAAR,EAAkCP,kBAAlC;AACAH,GAAG,CAACU,GAAJ,CAAQ,sBAAR,EAAgCL,gBAAhC;AACAL,GAAG,CAACU,GAAJ,CAAQ,kBAAR,EAA4BJ,aAA5B;AACAN,GAAG,CAACU,GAAJ,CAAQ,kBAAR,EAA4BH,aAA5B;AACAP,GAAG,CAACU,GAAJ,CAAQ,qBAAR,EAA+BF,eAA/B,E,CACA;;AACAR,GAAG,CAACU,GAAJ,CAAQR,WAAR;AACAF,GAAG,CAACU,GAAJ,CAAQT,gBAAR;AACAW,MAAM,CAACC,OAAP,GAAiBb,GAAjB;AAEA,IAAMc,SAAS,GAAG,CACjB,kCADiB,EAEjB,yCAFiB,EAGjB,kCAHiB,CAGmB;AAHnB,CAAlB;AAMA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,gBAAUA,OAAV,EAAkBC,QAAlB,EAA4B;AAClC,QAAIH,SAAS,CAACI,OAAV,CAAkBF,OAAlB,MAA8B,CAAC,CAAnC,EAAsC;AACpCC,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,qBAAV,CAAD,CAAR;AACD;AACF;AAPiB,CAApB;AAUAnB,GAAG,CAACU,GAAJ,CAAQX,IAAI,CAACgB,WAAD,CAAZ;AAEAf,GAAG,CAACoB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,CAFD","sourcesContent":["const express = require(\"express\");\r\nconst morgan = require(\"morgan\");\r\nconst cors = require('cors');\r\nconst app = express();\r\nconst { globalErrHandler, notFoundErr, } = require(\"../middlewares/globalErrHandler\");\r\nconst academicTermRouter = require(\"../routes/academics/academicTerm\");\r\nconst academicYearRouter = require(\"../routes/academics/academicYear\");\r\nconst classLevelRouter=require(\"../routes/academics/classLevel\");\r\nconst programRouter=require(\"../routes/academics/program\");\r\nconst subjectRouter=require(\"../routes/academics/subjects\");\r\nconst yearGroupRouter=require(\"../routes/academics/yearGroups\");\r\nconst adminRouter = require(\"../routes/staff/adminRouter\");\r\napp.use(express.json());\r\n//routes\r\n//admin register\r\napp.use(\"/api/v1/admins\", adminRouter);\r\napp.use(\"/api/v1/academic-years\", academicYearRouter);\r\napp.use(\"/api/v1/academic-terms\", academicTermRouter);\r\napp.use(\"/api/v1/class-levels\", classLevelRouter);\r\napp.use(\"/api/v1/programs\", programRouter);\r\napp.use(\"/api/v1/subjects\", subjectRouter);\r\napp.use(\"/api/v1/year-groups\", yearGroupRouter);\r\n//Error middlewares\r\napp.use(notFoundErr);\r\napp.use(globalErrHandler);\r\nmodule.exports = app;\r\n\r\nconst whitelist = [\r\n\t'http://Admin-Dashboard-localhost',   \r\n\t'http://Student-Dashboard-main-localhost',\r\n\t'http://Doctor_DashBord-localhost', // Replace with your actual instructor localhost\r\n];\r\n\r\nconst corsOptions = {\r\n  origin: function (origin, callback) {\r\n    if (whitelist.indexOf(origin) !== -1) {\r\n      callback(null, true);\r\n    } else {\r\n      callback(new Error('Not allowed by CORS'));\r\n    }\r\n  },\r\n};\r\n\r\napp.use(cors(corsOptions));\r\n\r\napp.listen(8801, () => {\r\n  console.log('Server is running on http://localhost:8801');\r\n});"],"file":"app.dev.js"}