{"version":3,"sources":["isLogin.js"],"names":["Admin","require","verifyToken","isLogin","req","res","next","headerObj","headers","verifiedToken","token","findById","id","select","user","userAuth","err","Error","module","exports"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,sBAAD,CAA3B;;AACA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ;AACMC,UAAAA,SAFM,GAEMH,GAAG,CAACI,OAFV,EAGZ;AACA;;AACMC,UAAAA,aALM,GAKUP,WAAW,CAACQ,KAAD,CALrB;;AAAA,eAMRD,aANQ;AAAA;AAAA;AAAA;;AAAA;AAAA,0CAQWT,KAAK,CAACW,QAAN,CAAeF,aAAa,CAACG,EAA7B,EAAiCC,MAAjC,CAAwC,iBAAxC,CARX;;AAAA;AAQFC,UAAAA,IARE;AASR;AACAV,UAAAA,GAAG,CAACW,QAAJ,GAAeD,IAAf;AACAR,UAAAA,IAAI;AAXI;AAAA;;AAAA;AAaFU,UAAAA,GAbE,GAaI,IAAIC,KAAJ,CAAU,uBAAV,CAbJ;AAcRX,UAAAA,IAAI,CAACU,GAAD,CAAJ;;AAdQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAiBAE,MAAM,CAACC,OAAP,GAAiBhB,OAAjB","sourcesContent":["const Admin = require(\"../model/staff/Admin\");\r\nconst verifyToken = require(\"../utlis/verifyToken\");\r\nconst isLogin = async(req, res, next) => {\r\n    //get token from header\r\n    const headerObj = req.headers;\r\n    // const token = headerObj?.authorization?.split(\" \")[1];\r\n    //verify token\r\n    const verifiedToken = verifyToken(token);\r\n    if (verifiedToken) {\r\n        //find Admin \r\n        const user = await Admin.findById(verifiedToken.id).select(\"name email role\");\r\n        //save the user into req.obj\r\n        req.userAuth = user;\r\n        next();\r\n    } else {\r\n        const err = new Error(\"Token expired/invalid\");\r\n        next(err);\r\n    }\r\n};\r\nmodule.exports = isLogin;"],"file":"isLogin.dev.js"}