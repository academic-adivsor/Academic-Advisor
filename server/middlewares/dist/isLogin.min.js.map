{"version":3,"sources":["isLogin.js"],"names":["Admin","require","verifyToken","req","res","next","headers","verifiedToken","token","findById","id","select","user","userAuth","headerObj","err","Error","module","exports","isLogin"],"mappings":"aAAA,IAAMA,MAAQC,QAAQ,wBAChBC,YAAcD,QAAQ,wBADtBD,QAAQC,SAAQE,EAAAC,EAAAC,GAARJ,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,GACMA,EAAQK,QACZC,EAAAL,YAAAM,OAFFP,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAEED,MAAAS,SAAAF,EAAAG,IAAAC,OAAA,oBAFFV,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAEEW,EAFFX,EAAAA,KAGVE,EAAAU,SAAAD,EACME,IAJIb,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAeAc,EAAM,IAAIC,MAAM,yBARpBT,EAAAA,GAPIN,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,WAEEgB,OAAAC,QAAAC","file":"isLogin.min.js","sourcesContent":["const Admin = require(\"../model/staff/Admin\");\r\nconst verifyToken = require(\"../utlis/verifyToken\");\r\nconst isLogin = async(req, res, next) => {\r\n    //get token from header\r\n    const headerObj = req.headers;\r\n    // const token = headerObj?.authorization?.split(\" \")[1];\r\n    //verify token\r\n    const verifiedToken = verifyToken(token);\r\n    if (verifiedToken) {\r\n        //find Admin \r\n        const user = await Admin.findById(verifiedToken.id).select(\"name email role\");\r\n        //save the user into req.obj\r\n        req.userAuth = user;\r\n        next();\r\n    } else {\r\n        const err = new Error(\"Token expired/invalid\");\r\n        next(err);\r\n    }\r\n};\r\nmodule.exports = isLogin;"]}