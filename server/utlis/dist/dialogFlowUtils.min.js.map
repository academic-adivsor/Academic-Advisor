{"version":3,"sources":["dialogFlowUtils.js"],"names":["require","SessionsClient","processUserMessage","userMessage","sessionId","serviceAccount","sessionClient","session","queryInput","responses","regeneratorRuntime","async","_context","prev","next","credentials","sessionPath","text","languageCode","awrap","detectIntent","sent","abrupt","t0","stop","module","exports"],"mappings":"0BAA2BA,QAAQ,cAA3BC,wBAAAA,eAEFC,mBAF6B,SAAAC,EAEYC,EAAWC,GAFvB,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAA3Bb,EAGgB,IAAIA,eAHpBA,CAGqCc,YAAaV,IAClDE,EAAUD,EAAcU,YAAY,cAAeZ,GAFrDF,EAAAA,CAAqBe,KAAA,CAAAA,KAAAd,EAAAe,aAAA,UAFQN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAS,MAERb,EAAAc,aAAA,CAAAb,QAAAA,EAAAC,WAAAA,KAFQ,KAAA,EAAA,OAGQC,EAHRG,EAAAS,KAAAT,EAAAU,OAAA,SAI3Bf,EAAUD,GAAAA,YAAcU,iBAJG,KAAA,GAAA,OAAAJ,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,MAAA,GAM/BK,QAAAA,MAAM,SAANA,EAAAA,IAN+BL,EAAAU,OAAA,SAO7BL,iDAP6B,KAAA,GAAA,IAAA,MAAA,OAAAL,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAERC,OAAAC,QAAA,CAAAxB,mBAAAA","file":"dialogFlowUtils.min.js","sourcesContent":["const { SessionsClient } = require('dialogflow');\r\n\r\nconst processUserMessage = async (userMessage, sessionId, serviceAccount) => {\r\n  const sessionClient = new SessionsClient({ credentials: serviceAccount });\r\n  const session = sessionClient.sessionPath('parker-pslk', sessionId);\r\n  const queryInput = {\r\n    text: {\r\n      text: userMessage,\r\n      languageCode: 'en-US',\r\n    },\r\n  };\r\n  \r\n  try {\r\n    const responses = await sessionClient.detectIntent({ session, queryInput });\r\n    return responses[0].queryResult.fulfillmentText;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    return 'Oops! Something went wrong. Please try again.'; // Default error message\r\n  }\r\n};\r\n\r\nmodule.exports = { processUserMessage };"]}