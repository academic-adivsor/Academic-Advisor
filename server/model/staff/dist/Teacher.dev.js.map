{"version":3,"sources":["Teacher.js"],"names":["mongoose","require","Schema","teacherSchema","name","type","String","required","email","password","dateEmployed","Date","now","teacherId","Math","floor","random","toString","slice","split","map","join","toUpperCase","isWitdrawn","Boolean","isSuspended","role","subjects","Types","ObjectId","ref","applicationStatus","program","classLevel","academicYear","examsCreated","createdBy","academicTerm","timestamps","Teacher","model","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;IAEQC,M,GAAWF,Q,CAAXE,M;AAER,IAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC7BE,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GADuB;AAK7BC,EAAAA,KAAK,EAAE;AACHH,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GALsB;AAS7BE,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GATmB;AAa7BG,EAAAA,YAAY,EAAE;AACVL,IAAAA,IAAI,EAAEM,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ,GAbe;AAiB7BC,EAAAA,SAAS,EAAE;AACPR,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGP,eAAS,oBAAW;AAChB,aACI,QACAO,IAAI,CAACC,KAAL,CAAW,MAAMD,IAAI,CAACE,MAAL,KAAgB,GAAjC,CADA,GAEAL,IAAI,CAACC,GAAL,GAAWK,QAAX,GAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAFA,GAGA,KAAKd,IAAL,CACCe,KADD,CACO,GADP,EAECC,GAFD,CAEK,UAAAhB,IAAI;AAAA,eAAIA,IAAI,CAAC,CAAD,CAAR;AAAA,OAFT,EAGCiB,IAHD,CAGM,EAHN,EAICC,WAJD,EAJJ;AAUH;AAdM,GAjBkB;AAiC7B;AACAC,EAAAA,UAAU,EAAE;AACRlB,IAAAA,IAAI,EAAEmB,OADE;AAER,eAAS;AAFD,GAlCiB;AAsC7B;AACAC,EAAAA,WAAW,EAAE;AACTpB,IAAAA,IAAI,EAAEmB,OADG;AAET,eAAS;AAFA,GAvCgB;AA2C7BE,EAAAA,IAAI,EAAE;AACFrB,IAAAA,IAAI,EAAEC,MADJ;AAEF,eAAS;AAFP,GA3CuB;AA+C7BqB,EAAAA,QAAQ,EAAE,CAAC;AACPtB,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgB0B,KAAhB,CAAsBC,QADrB;AAEPC,IAAAA,GAAG,EAAE;AAFE,GAAD,CA/CmB;AAmD7BC,EAAAA,iBAAiB,EAAE;AACf1B,IAAAA,IAAI,EAAEC,MADS;AAEf,YAAM,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,CAFS;AAGf,eAAS;AAHM,GAnDU;AAyD7B0B,EAAAA,OAAO,EAAE;AACL3B,IAAAA,IAAI,EAAEC;AADD,GAzDoB;AA4D7B;AACA2B,EAAAA,UAAU,EAAE;AACR5B,IAAAA,IAAI,EAAEC;AADE,GA7DiB;AAgE7B4B,EAAAA,YAAY,EAAE;AACV7B,IAAAA,IAAI,EAAEC;AADI,GAhEe;AAmE7B6B,EAAAA,YAAY,EAAE,CAAC;AACX9B,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgB0B,KAAhB,CAAsBC,QADjB;AAEXC,IAAAA,GAAG,EAAE;AAFM,GAAD,CAnEe;AAuE7BM,EAAAA,SAAS,EAAE;AACP/B,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgB0B,KAAhB,CAAsBC,QADrB;AAEPC,IAAAA,GAAG,EAAE,OAFE,CAGP;;AAHO,GAvEkB;AA4E7BO,EAAAA,YAAY,EAAE;AACVhC,IAAAA,IAAI,EAAEC;AADI;AA5Ee,CAAX,EA+EnB;AACCgC,EAAAA,UAAU,EAAE;AADb,CA/EmB,CAAtB,C,CAmFA;;AACA,IAAMC,OAAO,GAAGvC,QAAQ,CAACwC,KAAT,CAAe,SAAf,EAA0BrC,aAA1B,CAAhB;AAEAsC,MAAM,CAACC,OAAP,GAAiBH,OAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\n\nconst { Schema } = mongoose;\n\nconst teacherSchema = new Schema({\n    name: {\n        type: String,\n        required: true,\n    },\n    email: {\n        type: String,\n        required: true,\n    },\n    password: {\n        type: String,\n        required: true,\n    },\n    dateEmployed: {\n        type: Date,\n        default: Date.now,\n    },\n    teacherId: {\n        type: String,\n        required: true,\n        default: function() {\n            return (\n                \"TEA\" +\n                Math.floor(100 + Math.random() * 900) +\n                Date.now().toString().slice(2, 4) +\n                this.name\n                .split(\" \")\n                .map(name => name[0])\n                .join(\"\")\n                .toUpperCase()\n            );\n        },\n    },\n    //if witdrawn, the teacher will not be able to login\n    isWitdrawn: {\n        type: Boolean,\n        default: false,\n    },\n    //if suspended, the teacher can login but cannot perform any task\n    isSuspended: {\n        type: Boolean,\n        default: false,\n    },\n    role: {\n        type: String,\n        default: \"teacher\",\n    },\n    subjects: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Subject\",\n    }, ],\n    applicationStatus: {\n        type: String,\n        enum: [\"pending\", \"approved\", \"rejected\"],\n        default: \"pending\",\n    },\n\n    program: {\n        type: String,\n    },\n    //A teacher can teach in more than one class level\n    classLevel: {\n        type: String,\n    },\n    academicYear: {\n        type: String,\n    },\n    examsCreated: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Exam\",\n    }, ],\n    createdBy: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Admin\",\n        // required: true,\n    },\n    academicTerm: {\n        type: String,\n    },\n}, {\n    timestamps: true,\n});\n\n// model\nconst Teacher = mongoose.model(\"Teacher\", teacherSchema);\n\nmodule.exports = Teacher;"],"file":"Teacher.dev.js"}