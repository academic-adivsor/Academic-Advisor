{"version":3,"sources":["Admin.js"],"names":["bcrypt","require","mongoose","Schema","name","String","required","type","email","password","role","Types","ObjectId","ref","academicTerms","programs","yearGroups","academicYears","classLevels","teachers","students","Admin","model","adminSchema","module","exports"],"mappings":"aAAA,IAAMA,OAASC,QAAQ,YACjBC,SAAWD,QAAQ,YADnBD,YAAgB,IAACE,SAAvBC,OAAA,CAGIC,KAAM,CAFJF,KAAQG,OAINC,UAAU,GAFdF,MAAM,CACEG,KAAEF,OACNC,UAAU,GAEdE,SAAO,CACCD,KAAEF,OACNC,UAAU,GAEdG,KAAQ,CACAF,KAAEF,OACNC,QAAU,SAEdI,cAAM,CAAA,CACEH,KAAEF,SADJF,OAAAQ,MAAAC,SAEFC,IAAA,iBAEJC,SAAAA,CAAa,CACLP,KAAEL,SAASC,OAAOQ,MAAMC,SACzBC,IAAE,YAETE,WAAW,CAAA,CACHR,KAAEL,SAASC,OAAOQ,MAAMC,SACzBC,IAAE,cAETG,cAAa,CAAA,CACLT,KAAEL,SAASC,OAAOQ,MAAMC,SACzBC,IAAE,iBAETI,YAAe,CAAC,CACRV,KAAEL,SAASC,OAAOQ,MAAMC,SACzBC,IAAE,eAETK,SAAW,CAAE,CACLX,KAAEL,SAASC,OAAOQ,MAAMC,SACzBC,IAAE,YAETM,SAAW,CAAA,CACHZ,KAAEL,SAASC,OAAOQ,MAAMC,SACzBC,IAAE,aAETO,CACIb,YAAML,IAGXmB,MAAAnB,SAAAoB,MAAA,QAAAC,aAAAC,OAGHC,QAAAJ","file":"Admin.min.js","sourcesContent":["const bcrypt = require(\"bcryptjs\");\nconst mongoose = require(\"mongoose\");\nconst adminSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: true,\n    },\n    email: {\n        type: String,\n        required: true,\n    },\n    password: {\n        type: String,\n        required: true,\n    },\n    role: {\n        type: String,\n        default: \"admin\",\n    },\n    academicTerms: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"AcademicTerm\",\n    }, ],\n    programs: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Program\",\n    }, ],\n    yearGroups: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"YearGroup\",\n    }, ],\n    academicYears: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"AcademicYear\",\n    }, ],\n    classLevels: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"ClassLevel\",\n    }, ],\n    teachers: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Teacher\",\n    }, ],\n    students: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Student\",\n    }, ],\n}, {\n    timestamps: true,\n});\n//model\nconst Admin = mongoose.model(\"Admin\", adminSchema);\n\nmodule.exports = Admin;"]}