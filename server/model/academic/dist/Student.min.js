"use strict";var mongoose=require("mongoose"),studentSchema=new mongoose.Schema({name:{type:String,required:!0},email:{type:String,required:!0},password:{type:String,required:!0},studentId:{type:String,required:!0,default:function(){return"STU"+Math.floor(100+900*Math.random())+Date.now().toString().slice(2,4)+this.name.split(" ").map(function(e){return e[0]}).join("").toUpperCase()}},role:{type:String,default:"student"},classLevels:[{type:mongoose.Schema.Types.ObjectId,ref:"ClassLevel"}],currentClassLevel:{type:String,default:function(){return this.classLevels[this.classLevels.length-1]}},academicYear:{type:mongoose.Schema.Types.ObjectId,ref:"AcademicYear"},dateAdmitted:{type:Date,default:Date.now},examResults:[{type:mongoose.Schema.Types.ObjectId,ref:"ExamResult"}],program:{type:mongoose.Schema.Types.ObjectId,ref:"Program"},isPromotedToLevel200:{type:Boolean,default:!1},isPromotedToLevel300:{type:Boolean,default:!1},isPromotedToLevel400:{type:Boolean,default:!1},isGraduated:{type:Boolean,default:!1},isWithdrawn:{type:Boolean,default:!1},isSuspended:{type:Boolean,default:!1},prefectName:{type:String},yearGraduated:{type:Date}},{timestamps:!0}),Student=mongoose.model("Student",studentSchema);module.exports=Student;
//# sourceMappingURL=Student.min.js.map
