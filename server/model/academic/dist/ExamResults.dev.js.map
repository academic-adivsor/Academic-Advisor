{"version":3,"sources":["ExamResults.js"],"names":["mongoose","require","Schema","examResultSchema","student","type","Types","ObjectId","ref","required","exam","grade","Number","score","passMark","status","String","remarks","position","subject","classLevel","academicTerm","academicYear","isPublished","Boolean","timestamps","ExamResult","model","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;IAEQC,M,GAAWF,Q,CAAXE,M,EAER;;AACA,IAAMC,gBAAgB,GAAG,IAAID,MAAJ,CACvB;AACEE,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEH,MAAM,CAACI,KAAP,CAAaC,QADZ;AAEPC,IAAAA,GAAG,EAAE,SAFE;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GADX;AAMEC,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAEH,MAAM,CAACI,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE,MAFD;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GANR;AAWEE,EAAAA,KAAK,EAAE;AACLN,IAAAA,IAAI,EAAEO,MADD;AAELH,IAAAA,QAAQ,EAAE;AAFL,GAXT;AAeEI,EAAAA,KAAK,EAAE;AACLR,IAAAA,IAAI,EAAEO,MADD;AAELH,IAAAA,QAAQ,EAAE;AAFL,GAfT;AAmBEK,EAAAA,QAAQ,EAAE;AACRT,IAAAA,IAAI,EAAEO,MADE;AAERH,IAAAA,QAAQ,EAAE,IAFF;AAGR,eAAS;AAHD,GAnBZ;AAwBE;AACAM,EAAAA,MAAM,EAAE;AACNV,IAAAA,IAAI,EAAEW,MADA;AAENP,IAAAA,QAAQ,EAAE,IAFJ;AAGN,YAAM,CAAC,QAAD,EAAU,QAAV,CAHA;AAIN,eAAS;AAJH,GAzBV;AA+BE;AACAQ,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAEW,MADC;AAEPP,IAAAA,QAAQ,EAAE,IAFH;AAGP,YAAM,CAAC,WAAD,EAAc,MAAd,EAAsB,MAAtB,CAHC;AAIP,eAAS;AAJF,GAhCX;AAsCES,EAAAA,QAAQ,EAAE;AACRb,IAAAA,IAAI,EAAEO,MADE;AAERH,IAAAA,QAAQ,EAAE;AAFF,GAtCZ;AA2CEU,EAAAA,OAAO,EAAE;AACPd,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADrB;AAEPC,IAAAA,GAAG,EAAE;AAFE,GA3CX;AA+CEY,EAAAA,UAAU,EAAE;AACVf,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADlB;AAEVC,IAAAA,GAAG,EAAE;AAFK,GA/Cd;AAmDEa,EAAAA,YAAY,EAAE;AACZhB,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADhB;AAEZC,IAAAA,GAAG,EAAE,cAFO;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAnDhB;AAwDEa,EAAAA,YAAY,EAAE;AACZjB,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADhB;AAEZC,IAAAA,GAAG,EAAE,cAFO;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAxDhB;AA6DEc,EAAAA,WAAW,EAAE;AACXlB,IAAAA,IAAI,EAAEmB,OADK;AAEX,eAAS;AAFE;AA7Df,CADuB,EAmEvB;AACEC,EAAAA,UAAU,EAAE;AADd,CAnEuB,CAAzB;AAwEA,IAAMC,UAAU,GAAG1B,QAAQ,CAAC2B,KAAT,CAAe,YAAf,EAA6BxB,gBAA7B,CAAnB;AAEAyB,MAAM,CAACC,OAAP,GAAiBH,UAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\n\nconst { Schema } = mongoose;\n\n//exam result schema\nconst examResultSchema = new Schema(\n  {\n    student: {\n      type: Schema.Types.ObjectId,\n      ref: \"Student\",\n      required: true,\n    },\n    exam: {\n      type: Schema.Types.ObjectId,\n      ref: \"Exam\",\n      required: true,\n    },\n    grade: {\n      type: Number,\n      required: true,\n    },\n    score: {\n      type: Number,\n      required: true,\n    },\n    passMark: {\n      type: Number,\n      required: true,\n      default: 50,\n    },\n    //failed/Passed\n    status: {\n      type: String,\n      required: true,\n      enum: [\"passed\",\"passed\"],\n      default: \"Pass\",\n    },\n    //Excellent/Good/Poor\n    remarks: {\n      type: String,\n      required: true,\n      enum: [\"Excellent\", \"Good\", \"Poor\"],\n      default: \"Poor\",\n    },\n    position: {\n      type: Number,\n      required: true,\n    },\n\n    subject: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Subject\",\n    },\n    classLevel: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"ClassLevel\",\n    },\n    academicTerm: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"AcademicTerm\",\n      required: true,\n    },\n    academicYear: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"AcademicYear\",\n      required: true,\n    },\n    isPublished: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst ExamResult = mongoose.model(\"ExamResult\", examResultSchema);\n\nmodule.exports = ExamResult;\n"],"file":"ExamResults.dev.js"}