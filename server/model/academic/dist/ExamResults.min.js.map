{"version":3,"sources":["ExamResults.js"],"names":["mongoose","require","examResultSchema","Schema","studentID","type","String","required","exam","Types","ObjectId","ref","grade","Number","score","passMark","default","status","enum","remarks","Boolean","ExamResult","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,OAAWC,SAAXD,OAKAE,iBAAmB,IAAIC,OAA7B,CAEIC,UAAW,CACTC,KAAMC,OACNC,UAAU,GAEZC,KAAM,CACJH,KAAMF,OAAOM,MAAMC,SACnBC,IAAK,OACLJ,UAAU,GAEZK,MAAO,CACLP,KAAMQ,OACNN,UAAU,GAEZO,MAAO,CACLT,KAAMQ,OACNN,UAAU,GAEZQ,SAAU,CACRV,KAAMQ,OACNN,UAAU,EACVS,QAAS,IAGXC,OAAQ,CACNZ,KAAMC,OACNC,UAAU,EACVW,KAAM,CAAC,OAAQ,QACfF,QAAS,QAGXG,QAAS,CACPd,KAAMC,OACNC,UAAU,EACVW,KAAM,CAAC,YAAa,OAAQ,OAAQ,QACpCF,QAAS,QAITX,WAAML,CACNW,KAAKX,SAAAG,OAAAM,MAAAC,SAxCTC,IAAA,cA2CIN,aAAc,CACdM,KAAKX,SAAAG,OAFOM,MAAAC,SAGZH,IAAAA,eA7CJA,UAAA,GAgDIF,aAAc,CACdM,KAAKX,SAAAG,OAFOM,MAAAC,SAGZH,IAAAA,eAlDJA,UAAA,GAqDIF,YADW,CAEXA,KAAAe,QAFWJ,SAAA,IArDjB,CA+DMK,YAAU,IAAVA,WAAarB,SAASsB,MAAM,aAAcpB,kBAEhDqB,OAAOC,QAAUH","file":"ExamResults.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\n\nconst { Schema } = mongoose;\n\n//exam result schema\nconst examResultSchema = new Schema(\n  {\n    studentID: {\n      type: String,\n      required: true,\n    },\n    exam: {\n      type: Schema.Types.ObjectId,\n      ref: \"Exam\",\n      required: true,\n    },\n    grade: {\n      type: Number,\n      required: true,\n    },\n    score: {\n      type: Number,\n      required: true,\n    },\n    passMark: {\n      type: Number,\n      required: true,\n      default: 50,\n    },\n    //failed/Passed\n    status: {\n      type: String,\n      required: true,\n      enum: [\"Pass\", \"Fail\"],\n      default: \"Fail\",\n    },\n    //Excellent/Good/Poor\n    remarks: {\n      type: String,\n      required: true,\n      enum: [\"Excellent\", \"Good\", \"Poor\", \"Fair\"],\n      default: \"Poor\",\n    },\n\n    classLevel: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"ClassLevel\",\n    },\n    academicTerm: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"AcademicTerm\",\n      required: true,\n    },\n    academicYear: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"AcademicYear\",\n      required: true,\n    },\n    isPublished: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst ExamResult = mongoose.model(\"ExamResult\", examResultSchema);\n\nmodule.exports = ExamResult;\n"]}