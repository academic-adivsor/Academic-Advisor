{"version":3,"sources":["ExamResults.js"],"names":["mongoose","require","examResultSchema","Schema","student","type","Types","ObjectId","ref","required","exam","grade","Number","score","passMark","default","status","String","enum","remarks","position","Boolean","ExamResult","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,OAAWC,SAAXD,OAKAE,iBAAmB,IAAIC,OAA7B,CAEIC,QAAS,CACPC,KAAMF,OAAOG,MAAMC,SACnBC,IAAK,UACLC,UAAU,GAEZC,KAAM,CACJL,KAAMF,OAAOG,MAAMC,SACnBC,IAAK,OACLC,UAAU,GAEZE,MAAO,CACLN,KAAMO,OACNH,UAAU,GAEZI,MAAO,CACLR,KAAMO,OACNH,UAAU,GAEZK,SAAU,CACRT,KAAMO,OACNH,UAAU,EACVM,QAAS,IAGXC,OAAQ,CACNX,KAAMY,OACNR,UAAU,EACVS,KAAM,CAAC,SAAD,UACNH,QAAS,QAGXI,QAAS,CACPd,KAAMY,OACNR,UAAU,EACVS,KAAM,CAAC,YAAa,OAAQ,QAC5BH,QAAS,QAEXK,SAAU,CACRf,KAAMO,OACNH,UAAU,GAIVJ,QAAML,CACNQ,KAAKR,SAAAG,OAAAG,MAAAC,SA7CTC,IAAA,WAgDIH,WAAML,CACNQ,KAAKR,SAAAG,OAAAG,MAAAC,SAjDTC,IAAA,cAoDIH,aAAc,CACdG,KAAKR,SAAAG,OAFOG,MAAAC,SAGZE,IAAAA,eAtDJA,UAAA,GAyDIJ,aAAc,CACdG,KAAKR,SAAAG,OAFOG,MAAAC,SAGZE,IAAAA,eA3DJA,UAAA,GA8DIJ,YADW,CAEXA,KAAAgB,QAFWN,SAAA,IA9DjB,CAwEMO,YAAU,IAAVA,WAAatB,SAASuB,MAAM,aAAcrB,kBAEhDsB,OAAOC,QAAUH","file":"ExamResults.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\n\nconst { Schema } = mongoose;\n\n//exam result schema\nconst examResultSchema = new Schema(\n  {\n    student: {\n      type: Schema.Types.ObjectId,\n      ref: \"Student\",\n      required: true,\n    },\n    exam: {\n      type: Schema.Types.ObjectId,\n      ref: \"Exam\",\n      required: true,\n    },\n    grade: {\n      type: Number,\n      required: true,\n    },\n    score: {\n      type: Number,\n      required: true,\n    },\n    passMark: {\n      type: Number,\n      required: true,\n      default: 50,\n    },\n    //failed/Passed\n    status: {\n      type: String,\n      required: true,\n      enum: [\"passed\",\"passed\"],\n      default: \"Pass\",\n    },\n    //Excellent/Good/Poor\n    remarks: {\n      type: String,\n      required: true,\n      enum: [\"Excellent\", \"Good\", \"Poor\"],\n      default: \"Poor\",\n    },\n    position: {\n      type: Number,\n      required: true,\n    },\n\n    subject: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Subject\",\n    },\n    classLevel: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"ClassLevel\",\n    },\n    academicTerm: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"AcademicTerm\",\n      required: true,\n    },\n    academicYear: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"AcademicYear\",\n      required: true,\n    },\n    isPublished: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst ExamResult = mongoose.model(\"ExamResult\", examResultSchema);\n\nmodule.exports = ExamResult;\n"]}