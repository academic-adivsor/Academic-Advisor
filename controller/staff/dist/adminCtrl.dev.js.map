{"version":3,"sources":["adminCtrl.js"],"names":["Admin","require","exports","registerAdmnCtrl","req","res","body","name","email","password","findOne","adminFound","create","user","status","json","data","error","message","loginAdminCtrl","verifyPassword","getAdminsCtrl","getAdminCtrl","updateAdminCtrl","deleteAdminCtrl","adminSuspendTeacherCtrl","adminUnSuspendTeacherCtrl","adminWithdrawTeacherCtrl","adminUnWithdrawTeacherCtrl","adminPublishResultsCtrl","adminUnPublishResultsCtrl"],"mappings":"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","sourcesContent":["const Admin = require(\"../../model/staff/Admin\");\r\n//desc register admin\r\n//router POST /api/admin/register\r\n//@aces Private\r\nexports.registerAdmnCtrl = async(req, res) => {\r\n    const { name, email, password } = req.body;\r\n    try {\r\n        const adminFound = await Admin.findOne({ email });\r\n        //if (adminFound) {\r\n        // return res.json(\"Admin Exists\");\r\n        //}\r\n        const user = await Admin.create({\r\n            name,\r\n            email,\r\n            password,\r\n        });\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: user,\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc login admin\r\n//@route POST /api/v1/admins/login\r\n//@access Private\r\nexports.loginAdminCtrl = async(req, res) => {\r\n    const { email, password } = req.body;\r\n    try {\r\n        //find user\r\n        const user = await Admin.findOne({ email });\r\n        if (!user) {\r\n            return res.json({ message: \"Invalid login crendentials\" });\r\n        }\r\n        if (user && (await user.verifyPassword(password))) {\r\n            return res.json({ data: user });\r\n        } else {\r\n            return res.json({ message: \"Invalid login crendentials\" });\r\n        }\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get all admin\r\n//@route GET /api/v1/admins\r\n//@access Private\r\nexports.getAdminsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"All admins\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get single admin\r\n//@route GET /api/v1/admins/:id\r\n//@access Private\r\nexports.getAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"added single admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc update admin\r\n//@route UPDATE /api/v1/admins/:id\r\n//@access Private\r\nexports.updateAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"update admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc delete admin\r\n//@route DELETE /api/v1/admins/:id\r\n//@access Private\r\nexports.deleteAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"delete admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin suspend a teacher\r\n//@route PUT /api/v1/admins/suspend/teacher:id\r\n//@access Private\r\nexports.adminSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin suspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unsuspend a teacher\r\n//@route PUT /api/v1/admins/unsuspend/teacher:id\r\n//@access Private\r\nexports.adminUnSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unsuspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin withdraws a teacher\r\n//@route PUT /api/v1/admins/withdraws/teacher:id\r\n//@access Private\r\nexports.adminWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin withdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unwithdraws a teacher\r\n//@route PUT /api/v1/admins/unwithdraws/teacher:id\r\n//@access Private\r\nexports.adminUnWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unwithdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin publish exam results\r\n//@route PUT /api/v1/admins/publish/exam:id\r\n//@access Private\r\nexports.adminPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin publish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unpublish exam results\r\n//@route PUT /api/v1/admins/unpublish/exam:id\r\n//@access Private\r\nexports.adminUnPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unpublish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};"],"file":"adminCtrl.dev.js"}