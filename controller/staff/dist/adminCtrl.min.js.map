{"version":3,"sources":["adminCtrl.js"],"names":["AsyncHandler","require","Admin","verifyToken","exports","registerAdmnCtrl","req","res","_req$body","name","email","password","user","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","Error","create","status","json","data","stop","loginAdminCtrl","_req$body2","token","verify","_context2","adminFound","abrupt","message","t0","verifyPassword","_id","generateToken","getAdminsCtrl","error","getAdminCtrl","deleteAdminCtrl","adminUnSuspendTeacherCtrl","adminWithdrawTeacherCtrl","updateAdminCtrl"],"mappings":"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","file":"adminCtrl.min.js","sourcesContent":["const AsyncHandler = require(\"express-async-handler\");\r\nconst Admin = require(\"../../model/staff/Admin\");\r\nconst generateToken = require(\"../../utlis/generateToken\");\r\nconst verifyToken = require(\"../../utlis/verifyToken\");\r\n//desc register admin\r\n//router POST /api/admin/register\r\n//@aces Private\r\nexports.registerAdmnCtrl = AsyncHandler(async(req, res) => {\r\n    const { name, email, password } = req.body;\r\n    //check if email exists\r\n    const adminFound = await Admin.findOne({ email });\r\n    if (adminFound) {\r\n        throw new Error(\"Admin Exists\");\r\n    }\r\n    const user = await Admin.create({\r\n        name,\r\n        email,\r\n        password,\r\n    });\r\n    res.status(201).json({\r\n        status: \"success\",\r\n        data: user,\r\n    });\r\n});\r\n//@desc login admin\r\n//@route POST /api/v1/admins/login\r\n//@access Private\r\nexports.loginAdminCtrl = AsyncHandler(async(req, res) => {\r\n    const { email, password } = req.body;\r\n    //find user\r\n    const user = await Admin.findOne({ email });\r\n    if (!user) {\r\n        return res.json({ message: \"Invalid login crendentials\" });\r\n    }\r\n    if (user && (await user.verifyPassword(password))) {\r\n        const token = generateToken(user._id);\r\n        const verify = verifyToken(token);\r\n        return res.json({ data: generateToken(user._id), user, verify });\r\n    } else {\r\n        return res.json({ message: \"Invalid login crendentials\" });\r\n    }\r\n});\r\n//@desc Get all admin\r\n//@route GET /api/v1/admins\r\n//@access Private\r\nexports.getAdminsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"All admins\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get single admin\r\n//@route GET /api/v1/admins/:id\r\n//@access Private\r\nexports.getAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"added single admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc update admin\r\n//@route UPDATE /api/v1/admins/:id\r\n//@access Private\r\nexports.updateAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"update admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc delete admin\r\n//@route DELETE /api/v1/admins/:id\r\n//@access Private\r\nexports.deleteAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"delete admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin suspend a teacher\r\n//@route PUT /api/v1/admins/suspend/teacher:id\r\n//@access Private\r\nexports.adminSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin suspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unsuspend a teacher\r\n//@route PUT /api/v1/admins/unsuspend/teacher:id\r\n//@access Private\r\nexports.adminUnSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unsuspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin withdraws a teacher\r\n//@route PUT /api/v1/admins/withdraws/teacher:id\r\n//@access Private\r\nexports.adminWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin withdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unwithdraws a teacher\r\n//@route PUT /api/v1/admins/unwithdraws/teacher:id\r\n//@access Private\r\nexports.adminUnWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unwithdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin publish exam results\r\n//@route PUT /api/v1/admins/publish/exam:id\r\n//@access Private\r\nexports.adminPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin publish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unpublish exam results\r\n//@route PUT /api/v1/admins/unpublish/exam:id\r\n//@access Private\r\nexports.adminUnPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unpublish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};"]}