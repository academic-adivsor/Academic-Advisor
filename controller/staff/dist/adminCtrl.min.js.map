{"version":3,"sources":["adminCtrl.js"],"names":["Admin","require","exports","registerAdmnCtrl","req","res","_req$body","name","email","password","user","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","create","status","json","t0","adminFound","error","message","stop","loginAdminCtrl","_req$body2","_context2","data","abrupt","verifyPassword","t1","getAdminsCtrl","updateAdminCtrl","deleteAdminCtrl","adminSuspendTeacherCtrl","adminUnSuspendTeacherCtrl","adminWithdrawTeacherCtrl","getAdminCtrl","adminUnWithdrawTeacherCtrl","adminPublishResultsCtrl","adminUnPublishResultsCtrl"],"mappings":"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","file":"adminCtrl.min.js","sourcesContent":["const Admin = require(\"../../model/staff/Admin\");\r\n//desc register admin\r\n//router POST /api/admin/register\r\n//@aces Private\r\nexports.registerAdmnCtrl = async(req, res) => {\r\n    const { name, email, password } = req.body;\r\n    try {\r\n        const adminFound = await Admin.findOne({ email });\r\n        //if (adminFound) {\r\n        // return res.json(\"Admin Exists\");\r\n        //}\r\n        const user = await Admin.create({\r\n            name,\r\n            email,\r\n            password,\r\n        });\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: user,\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc login admin\r\n//@route POST /api/v1/admins/login\r\n//@access Private\r\nexports.loginAdminCtrl = async(req, res) => {\r\n    const { email, password } = req.body;\r\n    try {\r\n        //find user\r\n        const user = await Admin.findOne({ email });\r\n        if (!user) {\r\n            return res.json({ message: \"Invalid login crendentials\" });\r\n        }\r\n        if (user && (await user.verifyPassword(password))) {\r\n            return res.json({ data: user });\r\n        } else {\r\n            return res.json({ message: \"Invalid login crendentials\" });\r\n        }\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get all admin\r\n//@route GET /api/v1/admins\r\n//@access Private\r\nexports.getAdminsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"All admins\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get single admin\r\n//@route GET /api/v1/admins/:id\r\n//@access Private\r\nexports.getAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"added single admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc update admin\r\n//@route UPDATE /api/v1/admins/:id\r\n//@access Private\r\nexports.updateAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"update admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc delete admin\r\n//@route DELETE /api/v1/admins/:id\r\n//@access Private\r\nexports.deleteAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"delete admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin suspend a teacher\r\n//@route PUT /api/v1/admins/suspend/teacher:id\r\n//@access Private\r\nexports.adminSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin suspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unsuspend a teacher\r\n//@route PUT /api/v1/admins/unsuspend/teacher:id\r\n//@access Private\r\nexports.adminUnSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unsuspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin withdraws a teacher\r\n//@route PUT /api/v1/admins/withdraws/teacher:id\r\n//@access Private\r\nexports.adminWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin withdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unwithdraws a teacher\r\n//@route PUT /api/v1/admins/unwithdraws/teacher:id\r\n//@access Private\r\nexports.adminUnWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unwithdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin publish exam results\r\n//@route PUT /api/v1/admins/publish/exam:id\r\n//@access Private\r\nexports.adminPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin publish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unpublish exam results\r\n//@route PUT /api/v1/admins/unpublish/exam:id\r\n//@access Private\r\nexports.adminUnPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unpublish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};"]}