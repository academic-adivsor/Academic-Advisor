{"version":3,"sources":["adminCtrl.js"],"names":["AsyncHandler","require","Admin","exports","registerAdmnCtrl","req","res","_req$body","name","email","password","user","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","Error","create","status","json","data","stop","loginAdminCtrl","_req$body2","_context2","adminFound","abrupt","message","t0","verifyPassword","t1","error","getAdminsCtrl","getAdminCtrl","updateAdminCtrl","deleteAdminCtrl","adminSuspendTeacherCtrl","adminUnSuspendTeacherCtrl","adminPublishResultsCtrl","adminUnPublishResultsCtrl"],"mappings":"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","file":"adminCtrl.min.js","sourcesContent":["const AsyncHandler = require(\"express-async-handler\");\r\nconst Admin = require(\"../../model/staff/Admin\");\r\n//desc register admin\r\n//router POST /api/admin/register\r\n//@aces Private\r\nexports.registerAdmnCtrl = AsyncHandler(async(req, res) => {\r\n    const { name, email, password } = req.body;\r\n    //check if email exists\r\n    const adminFound = await Admin.findOne({ email });\r\n    if (adminFound) {\r\n        throw new Error(\"Admin Exists\");\r\n    }\r\n    const user = await Admin.create({\r\n        name,\r\n        email,\r\n        password,\r\n    });\r\n    res.status(201).json({\r\n        status: \"success\",\r\n        data: user,\r\n    });\r\n});\r\n//@desc login admin\r\n//@route POST /api/v1/admins/login\r\n//@access Private\r\nexports.loginAdminCtrl = async(req, res) => {\r\n    const { email, password } = req.body;\r\n    try {\r\n        //find user\r\n        const user = await Admin.findOne({ email });\r\n        if (!user) {\r\n            return res.json({ message: \"Invalid login crendentials\" });\r\n        }\r\n        if (user && (await user.verifyPassword(password))) {\r\n            return res.json({ data: user });\r\n        } else {\r\n            return res.json({ message: \"Invalid login crendentials\" });\r\n        }\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get all admin\r\n//@route GET /api/v1/admins\r\n//@access Private\r\nexports.getAdminsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"All admins\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get single admin\r\n//@route GET /api/v1/admins/:id\r\n//@access Private\r\nexports.getAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"added single admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc update admin\r\n//@route UPDATE /api/v1/admins/:id\r\n//@access Private\r\nexports.updateAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"update admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc delete admin\r\n//@route DELETE /api/v1/admins/:id\r\n//@access Private\r\nexports.deleteAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"delete admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin suspend a teacher\r\n//@route PUT /api/v1/admins/suspend/teacher:id\r\n//@access Private\r\nexports.adminSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin suspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unsuspend a teacher\r\n//@route PUT /api/v1/admins/unsuspend/teacher:id\r\n//@access Private\r\nexports.adminUnSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unsuspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin withdraws a teacher\r\n//@route PUT /api/v1/admins/withdraws/teacher:id\r\n//@access Private\r\nexports.adminWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin withdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unwithdraws a teacher\r\n//@route PUT /api/v1/admins/unwithdraws/teacher:id\r\n//@access Private\r\nexports.adminUnWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unwithdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin publish exam results\r\n//@route PUT /api/v1/admins/publish/exam:id\r\n//@access Private\r\nexports.adminPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin publish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unpublish exam results\r\n//@route PUT /api/v1/admins/unpublish/exam:id\r\n//@access Private\r\nexports.adminUnPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unpublish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};"]}