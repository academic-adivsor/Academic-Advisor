{"version":3,"sources":["adminCtrl.js"],"names":["Admin","require","exports","registerAdmnCtrl","req","res","_req$body","name","email","password","user","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","abrupt","json","create","status","t0","adminFound","error","message","stop","loginAdminCtrl","getAdminsCtrl","data","getAdminCtrl","updateAdminCtrl","deleteAdminCtrl","adminUnWithdrawTeacherCtrl","adminPublishResultsCtrl"],"mappings":"aAAA,IAAMA,MAAQC,QAAQ,2BAGtBC,QAAAC,iBAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAT,EAEsCF,EAAIY,KAA9BT,EAFZD,EAEYC,KAAMC,EAFlBF,EAEkBE,MAAOC,EAFzBH,EAEyBG,SAFzBI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAM,MAC2BjB,MAAAkB,QAAA,CAAWb,MAAAA,KADtC,KAAA,EAAA,GAAAQ,EAAAM,KAAA,OAAAN,EAAAO,OAAA,SAMmBf,EAAIgB,KAAK,iBAN5BR,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAM,MAC2BjB,MAAAsB,OAAA,CAAAf,KAAAA,EAAAC,MAAAA,EAAAC,SAAAA,KAD3B,KAAA,EAC2BC,EAD3BG,EAAAM,KAC2Bd,EAAAkB,OAAA,KAAAF,KAAA,CAAAE,OAAA,UAGsBf,KAAKE,IAJtDG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,MAAA,GAC2BR,EAAAgB,KAAA,CAGbI,OAHa,SAmBfC,MAAOb,EAAAW,GAAMG,UApBzB,KAAA,GAAA,IAAA,MAAA,OAAAd,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OA2BA1B,QAAQ2B,eAAiB,SAACzB,EAAKC,GA1BJ,IAAAA,EAAAkB,OAAA,KAAAF,KAAA,CAAAE,OAAA,UAQfhB,KAAAA,yBAEAE,MAAAA,GAH4BJ,EAPbgB,KAAA,CAkCfE,OAAQ,SAlCOG,MAAAA,EAAAC,YAAAzB,QAAA4B,cAAA,SAAA1B,EAAAC,GA2CvB,IA3CuBA,EAAAkB,OAAA,KAAAF,KAAA,CAAAE,OAAA,UAAAQ,KAAA,eAkBfR,MAAAA,GACAG,EAAAA,KAAK,CAFTH,OAAA,SAkCIG,MAAOA,EAAMC,YAnDEzB,QAuB3B8B,aAAA,SAAA5B,EAAAC,GACA,IACAA,EAAAkB,OAAA,KAAAF,KAAA,CAoCYE,OAAQ,UACRQ,KAAM,uBAnCV,MAAAL,GACIH,EAAAA,KAAO,CACDA,OAAE,SACFG,MAAAA,EAAAC,YAObzB,QAAA+B,gBAAA,SAAA7B,EAAAC,GAEL,IACAA,EAAAkB,OAAA,KAAAF,KAAA,CACAE,OAAA,UAqCYQ,KAAM,iBApClB7B,MAAQ4B,GACAzB,EAAAgB,KAAA,CACIE,OAAYF,SACNK,MAAEA,EADSC,YAKZzB,QAATgC,gBAAA,SAAA9B,EAAAC,GAIH,IAELA,EAAAkB,OAAA,KAAAF,KAAA,CACAE,OAAA,UACAQ,KAAA,iBAuCM,MAAOL,GAtCLM,EAAAA,KAAAA,CACAT,OAAA,SACIA,MAAJG,EAAqBC,YAOjBD,QAAAA,wBAAaC,SAAAA,EAAAA,GAFR,IAIZtB,EAAAkB,OAAA,KAAAF,KAAA,CAELE,OAAA,UACAQ,KAAA,0BAwCM,MAAOL,GACLrB,EAAIgB,KAAK,CAvCTY,OAAAA,SACAP,MAAAA,EAAAC,YAOIJ,QAAAA,0BADK,SAAAnB,EAAAC,GAELqB,IAFJrB,EAAAkB,OAAA,KAAAF,KAAA,CAIHE,OAAA,UAELQ,KAAA,4BAEA,MAAAL,GAwCQrB,EAAIgB,KAAK,CACLE,OAAQ,SAxCZW,MAAAA,EAARP,YAOQtB,QAAIgB,yBAAK,SAAAjB,EAAAC,GACLkB,IACAG,EAAKH,OAAQI,KAAAA,KAAAA,CAFjBJ,OAAA,UAIHQ,KAAA,2BAGL,MAAAL,GACArB,EAAAgB,KAAA,CAyCYE,OAAQ,SACRG,MAAOA,EAAMC,YAnCpBzB,QAACiC,2BAAc,SAAA/B,EAAAC,GACZA,IACIkB,EAAMA,OAAE,KADHF,KAAA,CAEAE,OAAQI,UAFjBI,KAAA,6BAMR,MAAAL,GACArB,EAAAgB,KAAA,CACAE,OAAA,SA0CYG,MAAOA,EAAMC,YAvCIzB,QAArBkC,wBAAA,SAAAhC,EAAAC,GAIF,IACMgB,EAAJE,OAAS,KAAAF,KAAA,CACCE,OAAE,UACHQ,KAAO,+BAEnB,MAAAL,GAELrB,EAAAgB,KAAA,CACAE,OAAA,SACAG,MAAAA,EAAAC,YAKYI,QAAAA,0BAAM,SAAA3B,EAAAC,GAFW,IAIvBA,EAAOqB,OAAO,KAAAL,KAAA,CACZE,OAAS,UACCQ,KAAE,iCADZ,MAAAL,GAIHrB,EAAAgB,KAAA,CAELE,OAAA,SACAG,MAAAA,EAAAC","file":"adminCtrl.min.js","sourcesContent":["const Admin = require(\"../../model/staff/Admin\");\r\n//desc register admin\r\n//router POST /api/admin/register\r\n//@aces Private\r\nexports.registerAdmnCtrl = async(req, res) => {\r\n    const { name, email, password } = req.body;\r\n    try {\r\n        const adminFound = await Admin.findOne({ email });\r\n        if (adminFound) {\r\n            return res.json(\"Admin Exists\");\r\n        }\r\n        const user = await Admin.create({\r\n            name,\r\n            email,\r\n            password,\r\n        });\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: user,\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc login admin\r\n//@route POST /api/v1/admins/login\r\n//@access Private\r\nexports.loginAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin has been login\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get all admin\r\n//@route GET /api/v1/admins\r\n//@access Private\r\nexports.getAdminsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"All admins\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get single admin\r\n//@route GET /api/v1/admins/:id\r\n//@access Private\r\nexports.getAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"added single admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc update admin\r\n//@route UPDATE /api/v1/admins/:id\r\n//@access Private\r\nexports.updateAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"update admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc delete admin\r\n//@route DELETE /api/v1/admins/:id\r\n//@access Private\r\nexports.deleteAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"delete admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin suspend a teacher\r\n//@route PUT /api/v1/admins/suspend/teacher:id\r\n//@access Private\r\nexports.adminSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin suspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unsuspend a teacher\r\n//@route PUT /api/v1/admins/unsuspend/teacher:id\r\n//@access Private\r\nexports.adminUnSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unsuspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin withdraws a teacher\r\n//@route PUT /api/v1/admins/withdraws/teacher:id\r\n//@access Private\r\nexports.adminWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin withdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unwithdraws a teacher\r\n//@route PUT /api/v1/admins/unwithdraws/teacher:id\r\n//@access Private\r\nexports.adminUnWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unwithdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin publish exam results\r\n//@route PUT /api/v1/admins/publish/exam:id\r\n//@access Private\r\nexports.adminPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin publish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unpublish exam results\r\n//@route PUT /api/v1/admins/unpublish/exam:id\r\n//@access Private\r\nexports.adminUnPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unpublish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};"]}