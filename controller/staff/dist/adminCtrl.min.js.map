{"version":3,"sources":["adminCtrl.js"],"names":["Admin","require","exports","registerAdmnCtrl","req","res","_req$body","name","email","password","regeneratorRuntime","async","_context","prev","next","awrap","findOne","sent","AdminFound","body","create","status","data","t0","json","message","stop","user","error","getAdminsCtrl","getAdminCtrl","updateAdminCtrl","deleteAdminCtrl","adminSuspendTeacherCtrl","adminUnSuspendTeacherCtrl","adminWithdrawTeacherCtrl","adminUnWithdrawTeacherCtrl"],"mappings":"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","file":"adminCtrl.min.js","sourcesContent":["const Admin = require(\"../../model/staff/Admin\");\r\n//desc register admin\r\n//router POST /api/admin/register\r\n//@aces Private\r\nexports.registerAdmnCtrl = async(req, res) => {\r\n    const adminfound = await Admin.findOne({ email });\r\n    if (AdminFound) {\r\n        res.json(\"Admin Exists\");\r\n    }\r\n    const { name, email, password } = req.body;\r\n    try {\r\n        const user = await Admin.create({\r\n            name,\r\n            email,\r\n            password\r\n        });\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin has been registered\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc login admin\r\n//@route POST /api/v1/admins/login\r\n//@access Private\r\nexports.loginAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin has been login\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get all admin\r\n//@route GET /api/v1/admins\r\n//@access Private\r\nexports.getAdminsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"All admins\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc Get single admin\r\n//@route GET /api/v1/admins/:id\r\n//@access Private\r\nexports.getAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"added single admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc update admin\r\n//@route UPDATE /api/v1/admins/:id\r\n//@access Private\r\nexports.updateAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"update admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc delete admin\r\n//@route DELETE /api/v1/admins/:id\r\n//@access Private\r\nexports.deleteAdminCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"delete admin\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin suspend a teacher\r\n//@route PUT /api/v1/admins/suspend/teacher:id\r\n//@access Private\r\nexports.adminSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin suspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unsuspend a teacher\r\n//@route PUT /api/v1/admins/unsuspend/teacher:id\r\n//@access Private\r\nexports.adminUnSuspendTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unsuspend teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin withdraws a teacher\r\n//@route PUT /api/v1/admins/withdraws/teacher:id\r\n//@access Private\r\nexports.adminWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin withdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unwithdraws a teacher\r\n//@route PUT /api/v1/admins/unwithdraws/teacher:id\r\n//@access Private\r\nexports.adminUnWithdrawTeacherCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unwithdraw teacher\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin publish exam results\r\n//@route PUT /api/v1/admins/publish/exam:id\r\n//@access Private\r\nexports.adminPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin publish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};\r\n//@desc admin unpublish exam results\r\n//@route PUT /api/v1/admins/unpublish/exam:id\r\n//@access Private\r\nexports.adminUnPublishResultsCtrl = (req, res) => {\r\n    try {\r\n        res.status(201).json({\r\n            status: \"success\",\r\n            data: \"admin unpublish exam results\",\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: \"failed\",\r\n            error: error.message,\r\n        });\r\n    }\r\n};"]}